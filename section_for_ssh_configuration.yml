---
# 5.3 Configure SSH Server
# 5.3.1 Ensure permissions on /etc/ssh/sshd_config are configured
- name: 5.3.1 Ensure permissions on /etc/ssh/sshd_config are configured
  file:
    dest: /etc/ssh/sshd_config
    state: file
    owner: root
    group: root
    mode: 0600
# 5.3.2 Ensure permissions on SSH private host key files are configured
- name: 5.3.2 Ensure permissions on SSH private host key files are configured
  block:
    - name: 5.3.2 Ensure permissions on SSH private host key files are configured | find keys
      shell: |
        find /etc/ssh -xdev -type f -name 'ssh_host_*_key'  && true || true
      register: private_keys
    - name: 5.3.2 Ensure permissions on SSH private host key files are configured | fix permissions
      file:
        dest: "{{ item }}"
        state: file
        owner: root
        group: root
        mode: 0600
      with_items: "{{ private_keys.stdout_lines }}"
      when: "{{ private_keys.stdout_lines|length > 0 }}"
# 5.3.3 Ensure permissions on SSH public host key files are configured
- name: 5.3.3 Ensure permissions on SSH public host key files are configured
  block:
    - name: 5.3.3 Ensure permissions on SSH public host key files are configured | find keys
      shell: |
        find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' && true || true
      register: public_keys
    - name: 5.3.3 Ensure permissions on SSH public host key files are configured | fix permissions
      file:
        dest: "{{ item }}"
        state: file
        owner: root
        group: root
        mode: "go-wx"
      with_items: "{{ public_keys.stdout_lines }}"
      when: "{{ public_keys.stdout_lines|length > 0 }}"
# 5.3.4 Ensure SSH access is limited
# Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.
- name: 5.3.4 Ensure SSH access is limited
  block:
    - name: 5.3.4 Ensure SSH access is limited | allow users
      lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^AllowUsers"
        line: "AllowUsers {{ allowed_users }}"
      when:
        - "{{ allowed_users|length > 0 }}"
    - name: 5.3.4 Ensure SSH access is limited | allow groups
      lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^AllowGroups"
        line: "AllowGroups {{ allowed_groups }}"
      when:
        - allowed_groups != "None"
    - name: 5.3.4 Ensure SSH access is limited | denyusers
      lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^DenyUsers"
        line: "DenyUsers {{ deny_users }}"
      when:
        - deny_users != "None"
    - name: 5.3.4 Ensure SSH access is limited | denygroups
      lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^DenyGroups"
        line: "DenyGroups {{ deny_groups }}"
      when:
        - deny_groups != "None"
# 5.3.5 Ensure SSH LogLevel is appropriate
- name: 5.3.5 Ensure SSH LogLevel is appropriate
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^LogLevel"
    line: "LogLevel INFO"
# 5.3.6 Ensure SSH X11 forwarding is disabled
- name: 5.3.6 Ensure SSH X11 forwarding is disabled
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^X11Forwarding"
    line: "X11Forwarding no"
# 5.3.7 Ensure SSH MaxAuthTries is set to 4 or less
# Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.
- name: 5.3.7 Ensure SSH MaxAuthTries is set to 4 or less
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?MaxAuthTries \d'
    line: "MaxAuthTries {{ max_auth_tries }}"
# 5.3.8 Ensure SSH IgnoreRhosts is enabled
# Setting this parameter forces users to enter a password when authenticating with ssh.
- name: 5.3.8 Ensure SSH IgnoreRhosts is enabled
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^IgnoreRhosts"
    line: "IgnoreRhosts yes"
# 5.3.9 Ensure SSH HostbasedAuthentication is disabled
# Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf ,disabling the ability to use .rhosts files in SSH provides an additional layer of protection.
- name: 5.3.9 Ensure SSH HostbasedAuthentication is disabled
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^HostbasedAuthentication"
    line: "HostbasedAuthentication no"
# 5.3.10 Ensure SSH root login is disabled
# Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via sudo or su . This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident
- name: 5.3.10 Ensure SSH root login is disabled
  block:
    - name: "5.3.10 Ensure SSH root login is disabled: default"
      lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin .*"
        line: "PermitRootLogin no"
    - name: "5.3.10 Ensure SSH root login is disabled: remove root login for all existing IPs"
      replace:
        dest: /etc/ssh/sshd_config
        regexp: "^[Mm]atch [Aa]ddress.*\n.*PermitRootLogin.*$"
    - name: "5.3.10 Ensure SSH root login is disabled: allow ssh root login from '{{ ssh_root_login_ips }}'"
      lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^[Mm]atch [Aa]ddress.*\n*PermitRootLogin.*"
        line: "Match address {{ ssh_root_login_ips }}\n PermitRootLogin yes"
      when: (ssh_root_login_ips != "None") and (ssh_root_login_ips|length > 0)
# 5.3.11 Ensure SSH PermitEmptyPasswords is disabled
# Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system
- name: 5.3.11 Ensure SSH PermitEmptyPasswords is disabled
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^PermitEmptyPasswords"
    line: "PermitEmptyPasswords no"
# 5.3.12 Ensure SSH PermitUserEnvironment is disabled
# Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing trojan'd programs)
- name: 5.3.12 Ensure SSH PermitUserEnvironment is disabled
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^PermitUserEnvironment"
    line: "PermitUserEnvironment no"
# 5.3.13 Ensure only strong Ciphers are used
# Weak ciphers that are used for authentication to the cryptographic module cannot be relied upon to provide confidentiality or integrity, and system data may be compromised
- name: 5.3.13 Ensure only strong Ciphers are used
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^Ciphers"
    line: "Ciphers {{ ssh_ciphers }}"
# 5.3.14 Ensure only strong MAC algorithms are used
# MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of attention as a weak spot that can be exploited with expanded computing power. An attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the SSH tunnel and capture credentials and information
- name: 5.3.14 Ensure only strong MAC algorithms are used
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^MACs"
    line: "MACs {{ ssh_MACs }}"
# 5.3.15 Ensure only strong Key Exchange algorithms are used
# Key exchange methods that are considered weak should be removed. A key exchange method may be weak because too few bits are used, or the hashing algorithm is considered too weak. Using weak algorithms could expose connections to man-in-the-middle attacks
- name: 5.3.15 Ensure only strong Key Exchange algorithms are used
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^KexAlgorithms"
    line: "KexAlgorithms {{ ssh_key_algorithms }}"
# 5.3.16 Ensure SSH Idle Timeout Interval is configured
# Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value reduces this risk.
- name: 5.3.16 Ensure SSH Idle Timeout Interval is configured
  block:
    - name: 5.3.16 Ensure SSH Idle Timeout Interval is configured | clientalive
      lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^ClientAliveInterval"
        line: "ClientAliveInterval 300"
    - name: 5.3.16 Ensure SSH Idle Timeout Interval is configured | MaxAlive
      lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^ClientAliveCountMax"
        line: "ClientAliveCountMax 3"
# 5.3.17 Ensure SSH LoginGraceTime is set to one minute or less
# Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.
- name: 5.3.17 Ensure SSH LoginGraceTime is set to one minute or less
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^LoginGraceTime"
    line: "LoginGraceTime 60"

# 5.3.18 Ensure SSH warning banner is configured
# Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.
- name: 5.3.18 Ensure SSH warning banner is configured
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^Banner"
    line: "Banner /etc/issue.net"
# 5.3.19 Ensure SSH PAM is enabled
# When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server
- name: 5.3.19 Ensure SSH PAM is enabled
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^UsePAM"
    line: "UsePAM yes"
# 5.3.20 Ensure SSH AllowTcpForwarding is disabled
# Leaving port forwarding enabled can expose the organization to security risks and back- doors.
- name: 5.3.20 Ensure SSH AllowTcpForwarding is disabled
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^AllowTcpForwarding"
    line: "AllowTcpForwarding no"
# 5.3.21 Ensure SSH MaxStartups is configured
# To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.
- name: "5.3.21 Ensure SSH MaxStartups is configured to {{ ssh_max_startups }}"
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^MaxStartups"
    line: "MaxStartups {{ ssh_max_startups }}"
# 5.3.22 Ensure SSH MaxSessions is limited
# To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.
- name: "5.3.22 Ensure SSH MaxSessions is limited to {{ ssh_max_sessions }}"
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: "^MaxSessions"
    line: "MaxSessions {{ ssh_max_sessions }}"
  notify: sshd restart
